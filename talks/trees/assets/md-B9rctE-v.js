import{_ as o}from"./slidev/VClicks-Cn-4_LE_.js";import{b as i,o as u,w as t,g as e,e as m,v as c,x as p,C as a}from"./modules/vue-d8n_xe2r.js";import{I as d}from"./slidev/default-B0xix2cY.js";import{u as f,f as _}from"./slidev/context-COAq5UC9.js";import"./index-BIDGse0X.js";import"./modules/shiki-DyrLDqob.js";const C={__name:"trees.md__slidev_14",setup(y){const{$clicksContext:n,$frontmatter:l}=f();return n.setup(),(x,r)=>{const s=o;return u(),i(d,c(p(a(_)(a(l),13))),{default:t(()=>[r[1]||(r[1]=e("h1",null,"Summary",-1)),m(s,null,{default:t(()=>r[0]||(r[0]=[e("ul",null,[e("li",null,"Trees are a non-linear, dynamic data structure"),e("li",null,"Binary trees have at most two children"),e("li",null,"Special trees include full and complete trees"),e("li",null,"We can implement trees as arrays or linked lists"),e("li",null,"Traversal can be pre-order, in-order or post-order"),e("li",null,"Binary search trees are a form of binary tree that are particularly efficient for searching"),e("li",null,"We can insert, search, delete, find min and find max in a binary search tree")],-1)])),_:1})]),_:1},16)}}};export{C as default};
